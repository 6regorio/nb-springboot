/*
 * Copyright 2016 Alessandro Falappa.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.github.alexfalappa.nbspringboot.projects.customizer;

import java.io.File;
import java.util.logging.Logger;
import java.util.prefs.Preferences;

import org.netbeans.api.project.Project;
import org.netbeans.api.project.ProjectUtils;
import org.netbeans.modules.maven.api.customizer.ModelHandle2;
import org.netbeans.modules.maven.execute.model.ActionToGoalMapping;
import org.netbeans.modules.maven.execute.model.NetbeansActionMapping;
import org.netbeans.spi.project.ActionProvider;

import com.github.alexfalappa.nbspringboot.actions.ReloadAction;

/**
 *
 * @author Alessandro Falappa
 */
public class BootPanel extends javax.swing.JPanel {

    private static final Logger logger = Logger.getLogger(BootPanel.class.getName());
    public static final String PROP_TRG_ENABLED = "reloadtrigger.enabled";
    private Preferences prefs;
    private ModelHandle2 mh2;

    /** Creates new form BootPanel */
    public BootPanel() {
        initComponents();
    }

    public void setProject(Project prj) {
        prefs = ProjectUtils.getPreferences(prj, ReloadAction.class, true);
        chDevtools.setSelected(Boolean.valueOf(prefs.get(PROP_TRG_ENABLED, "false")));
        chDevtools.setEnabled(prefs != null && mh2 != null);
    }

    void setModelHandle(ModelHandle2 mh2) {
        this.mh2 = mh2;
        chDevtools.setEnabled(prefs != null && mh2 != null);
    }

    /** This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lDevtools = new javax.swing.JLabel();
        chDevtools = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(lDevtools, org.openide.util.NbBundle.getBundle(BootPanel.class).getString("BootPanel.lDevtools.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chDevtools, org.openide.util.NbBundle.getBundle(BootPanel.class).getString("BootPanel.chDevtools.text")); // NOI18N
        chDevtools.setEnabled(false);
        chDevtools.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chDevtoolsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lDevtools)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(chDevtools)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lDevtools)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chDevtools)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chDevtoolsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chDevtoolsActionPerformed
        final boolean flag = chDevtools.isSelected();
        prefs.put(PROP_TRG_ENABLED, String.valueOf(flag));
        if (flag) {
            File f = new File(ReloadAction.TRIGGER_FILE);
            if (f.canWrite()) {
                boolean deleted = f.delete();
                final String absolutePath = f.getAbsolutePath();
                if (deleted) {
                    logger.info(String.format("Deleted previous trigger file %s", absolutePath));
                } else {
                    logger.warning(String.format("Couldn't delete previous trigger file %s", absolutePath));
                }
            }
            // add command line option to maven actions
            ActionToGoalMapping mapps = mh2.getActionMappings();
            for (NetbeansActionMapping map : mapps.getActions()) {
                if (map.getActionName().equals(ActionProvider.COMMAND_RUN)) {
                    // TODO the run.arguments property may already exist, manage addition/removal of the single argument
                    map.addProperty("run.arguments", "--spring.devtools.restart.trigger-file=" + ReloadAction.TRIGGER_FILE);
                    mh2.markAsModified(mapps);
                }
            }
        } else {
            // remove command line option form maven actions
            ActionToGoalMapping mapps = mh2.getActionMappings();
            for (NetbeansActionMapping map : mapps.getActions()) {
                if (map.getActionName().equals(ActionProvider.COMMAND_RUN)) {
                    // TODO the run.arguments property may already exist, manage addition/removal of the single argument
                    map.getProperties().remove("run.arguments");
                    mh2.markAsModified(mapps);
                }
            }
        }
    }//GEN-LAST:event_chDevtoolsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chDevtools;
    private javax.swing.JLabel lDevtools;
    // End of variables declaration//GEN-END:variables

}
